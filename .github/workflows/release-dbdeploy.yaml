name: "Release dbt"
on:
  workflow_dispatch: ~
  push:
    branches:
      - "main"

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'  # Adjust to your required Go version

    - name: Compile for Linux
      run: |
        GOOS=linux GOARCH=amd64 go build -o dbt-amd64
        echo "Linux binary built."

    - name: Compile for Windows
      run: |
        GOOS=windows GOARCH=amd64 go build -o dbt.exe
        echo "Windows binary built."

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}-release
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Linux Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dbt-amd64
        asset_name: dbt-amd64
        asset_content_type: application/octet-stream

    - name: Upload Windows Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dbt.exe
        asset_name: dbt.exe
        asset_content_type: application/octet-stream



